# This is a basic workflow to help you get started with Actions

name: Install + Test

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test_ubuntu:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, "3.10"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download latest Radiance binaries
      id: download_release_asset
      run: |
        ver=$(gh release list -R LBNL-ETA/Radiance -L 1 | cut -f 3)
        gh release download $ver -R LBNL-ETA/Radiance -p '*Linux.zip'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Download latest EnergyPlus
      id: download_energyplus_asset
      run: |
        ver=$(gh release list -R NREL/EnergyPlus -L 1 | cut -f 3)
        gh release download $ver -R NREL/EnergyPlus -p '*Ubuntu2*.tar.gz'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Radiance
      run: |
        unzip Radiance_*_Linux.zip
        tar -xvf radiance-*-Linux.tar.gz
        mkdir buildRad
        sudo cp -avr ./radiance-*-Linux/usr/local/radiance ./buildRad
        export RAYPATH=.:${{ github.workspace }}/buildRad/radiance/lib
        export PATH=$PATH:${{ github.workspace }}/buildRad/radiance/bin
        rtrace -version

    - name: Install EnergyPlus
      run: |
        tar -xvf EnergyPlus*Ubuntu*.tar.gz
        ls
        rm EnergyPlus*.tar.gz
        mv EnergyPlus* EnergyPlus
        ls

    - name: Install frads
      run: |
        pip install .

    - name: Run tests
      run: |
        export RAYPATH=.:${{ github.workspace }}/buildRad/radiance/lib
        export PATH=$PATH:${{ github.workspace }}/buildRad/radiance/bin
        export PATH=$PATH:${{ github.workspace }}/EnergyPlus
        energyplus --version
        rtrace -version
        cd test
        python -m unittest -v
        pip install numpy
        python test_mrad.py

  test_osx:
    # The type of runner that the job will run on
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, "3.10"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download latest Radiance binaries
      id: download_release_asset
      run: |
        ver=$(gh release list -R LBNL-ETA/Radiance -L 1 | cut -f 3)
        gh release download $ver -R LBNL-ETA/Radiance -p '*OSX.zip'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Download latest EnergyPlus
      id: download_energyplus_asset
      run: |
        ver=$(gh release list -R NREL/EnergyPlus -L 1 | cut -f 3)
        gh release download $ver -R NREL/EnergyPlus -p '*macOS11*.tar.gz'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Radiance
      run: |
        unzip Radiance_*_OSX.zip
        ls
        export RAYPATH=.:${{ github.workspace }}/radiance/lib
        export PATH=$PATH:${{ github.workspace }}/radiance/bin
        rtrace -version

    - name: Install EnergyPlus
      run: |
        tar -xvf EnergyPlus*macOS*.tar.gz
        ls
        rm EnergyPlus*.tar.gz
        mv EnergyPlus*macOS* EnergyPlus
        ls
        export PATH=$PATH:${{ github.workspace }}/EnergyPlus

    - name: Install frads
      run: |
        pip install .

    - name: Run tests
      run: |
        export RAYPATH=.:${{ github.workspace }}/radiance/lib
        export PATH=$PATH:${{ github.workspace }}/radiance/bin
        export PATH=$PATH:${{ github.workspace }}/EnergyPlus
        energyplus --version
        rtrace -version
        cd test
        python -m unittest -v
        pip install numpy
        python test_mrad.py

  test_windows:
    # The type of runner that the job will run on
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, "3.10"]
    defaults:
      run:
        shell: cmd

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download latest Radiance binaries
      id: download_release_asset
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release download -R LBNL-ETA/Radiance -p "*Windows.zip"

    - name: Download latest EnergyPlus
      id: download_energyplus_asset
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release download -R NREL/EnergyPlus -p "*Windows*.zip"

    - name: Install Radiance
      run: |
        unzip Radiance_*_Windows.zip
        ls
        set RAYPATH=.;${{ github.workspace }}\lib
        set PATH=%PATH%;${{ github.workspace }}\bin
        rtrace -version

    - name: Install EnergyPlus
      run: |
        unzip EnergyPlus*Windows*.zip
        del /f EnergyPlus*.zip
        move "EnergyPlus*" EnergyPlus
        ls

    - name: Install frads
      run: |
        pip install .

    - name: Run tests
      run: |
        set RAYPATH=.;${{ github.workspace }}\lib
        set PATH=%PATH%;${{ github.workspace }}\bin
        set PATH=%PATH%;${{ github.workspace }}\EnergyPlus
        rtrace -version
        cd test
        python -m unittest -v
        pip install numpy
        mrad -v run two_phase.cfg
